# -*- coding: utf-8 -*-
"""EDA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p07wCqSD-2wPTvBOkavNCP_VqM3pt66k
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""# **EDA - Exploratory Data Analysis**

Dataset - Titanic Dataset 

KAGGLE -
"""

df = pd.read_csv('/content/drive/My Drive/Python - SmartKnower/Python/titanic_train.csv')
df

df.shape

df.info()

df.columns

df.describe()

df.nunique()

df.nunique().to_frame()

df.isnull().sum()

sns.heatmap(df.isnull(),yticklabels = False,cbar = False)
plt.show()

df['Survived']
# Not Survived
# Survived

# Usage of Matplotlib and Numpy
survived_people = df['Survived'].values # COnvert it into Numpy
unique,count = np.unique(survived_people,return_counts = True)
print(unique)
print(count)
label = ['Not Survived','Survived']

plt.bar(label,count,color = ['r','g'])
plt.show()

# 2nd Method
sns.countplot(x = 'Survived',data = df)
plt.show()

sns.countplot?

sns.countplot(x = 'Sex',data = df)
plt.show()

# Assignments

# Violin Plot
# Catplot

s = df['Pclass'].value_counts()
print(s)



df['Pclass'] # Passenger Class

# How many Passenger classes are there?
# How many passengers in each class?
graph = sns.countplot(x = 'Pclass',data = df)
i =1
for p in graph.patches:
  height = p.get_height()
  width = p.get_width()
  graph.text(p.get_x()+width/2,height+4,s[i],ha = "center")
  i = i+1
  #print(width)
  print(p.get_x())
plt.show()

# plt.annotate

p.get_x?

# Missing Values
old = np.max(df['Age'])
old

young = np.min(df['Age'])
young

b_young = np.sum((df['Age']>= 0) & (df['Age']<20))
b_adult = np.sum((df['Age']>= 20) & (df['Age']<40))
b_midage = np.sum((df['Age']>= 40) & (df['Age']<60))
b_old = np.sum((df['Age']>= 60))

print(b_young)
print(b_adult)
print(b_midage)
print(b_old)

164+387+137+26

891-714

#Total Values : 891
#We have : 714
# Missing :177

# To deal with missing values,

# 1. We can either the column
# 2. Fill it with Zero
# 3. Fill it with Mean Value

# SPecific for this particular dataset
# We can fill with Name of title group and replace it better

m_y = df['Age'].mean()

df1 = df.copy()
df1

df1['Age'] = df['Age'].fillna(value = m_y)
df1

df1.isnull().sum()

"""# **Assignment of Missing Values**

1. Take the Name Column and explore it( Find the unique titles)
[Mr, Mrs, Miss, Master, Dr]

2. Create a new column based on titles given above
3. Mean of all categories
4. Replace the missing values of Age column with mean values of category titles
"""